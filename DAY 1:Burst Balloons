// CODE IS IN C++ LANGUAGE.

//You are given n balloons, indexed from 0 to n - 1. Each balloon is painted with a number on it represented by an array nums. You are asked to burst all the balloons.

If you burst the ith balloon, you will get nums[i - 1] * nums[i] * nums[i + 1] coins. If i - 1 or i + 1 goes out of bounds of the array, then treat it as if there is a balloon with a 1 painted on it.

Return the maximum coins you can collect by bursting the balloons wisely.


class Solution {
public:
    int dp[502][502];
    int solve(vector<int>& arr, int i, int j)
    {
        if(i+1 == j){return 0;}
        if(dp[i][j] != -1){return dp[i][j];}
        int res = 0; 
        
        for(int k = i+1; k<j; k++)
        {
            int temp = solve(arr, i, k) + solve(arr, k, j) + arr[i]*arr[k]*arr[j] ;
            res = max(res, temp);
        }
        return dp[i][j] = res;
    }
    int maxCoins(vector<int>& nums) 
    {
        nums.insert(nums.begin(), 1);
        nums.push_back(1);
        int sz = nums.size();
        
        memset(dp, -1, sizeof(dp));
        return solve(nums, 0, sz-1);
    }
};


